version: '3'

networks:
  ice:
    driver: bridge
    ipam:
        config:
        - subnet: 10.1.1.0/24

services:
  pihole:
    container_name: pihole
    hostname: pihole
    image: pihole/pihole:latest
    networks:
      ice:
        ipv4_address: 10.1.1.2
    ports:
      - "53:53/tcp" # DNS
      - "53:53/udp" # DNS
      - "8080:80/tcp" # WEB UI
      - "67:67/udp" # DHCP
    environment:
      TZ: 'Europe/Vienna'
      WEBPASSWORD: '${PIHOLE_PASSWORD}'
      PIHOLE_DNS_: '10.1.1.3#53'
      DHCP_ACTIVE: true
      DHCP_START: 192.168.86.80
      DHCP_END: 192.168.86.250
      DHCP_ROUTER: 192.168.86.1
      PIHOLE_DOMAIN: "home"

    volumes:
      - '${HOST_ROOT}/pihole/:/etc/pihole/'
      - '${HOST_ROOT}/dnsmasq/:/etc/dnsmasq.d/'
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed      
    restart: unless-stopped

  unbound:
    container_name: unbound
    image: klutchell/unbound:latest
    networks:
      ice:
        ipv4_address: 10.1.1.3
    volumes:
      - ${HOST_ROOT}/unbound/custom.conf.d/:/etc/unbound/custom.conf.d/
      - ${HOST_ROOT}/unbound/unbound.conf/:/etc/unbound/unbound.conf
    ports:
      - "5053:53/tcp"
      - "5053:53/udp"
    healthcheck:
      test: ["NONE"]
    restart: unless-stopped

    
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ${HOST_ROOT}/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      ice:
        ipv4_address: 10.1.1.4
    ports:
      - "9090:9090"    

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter:latest
    networks:
      ice:
        ipv4_address: 10.1.1.5
    ports:
      - "9100:9100"
    pid: host
    volumes:
      - /:/host:ro,rslave
    command:
      - '--path.rootfs=/host'   


  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    user: "$UID:$GID"
    networks:
      ice:
        ipv4_address: 10.1.1.6
    ports:
      - "3000:3000"
    environment: 
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - ${HOST_ROOT}/grafana/data:/var/lib/grafana
      - ${HOST_ROOT}/grafana/provisioning:/etc/grafana/provisioning
    restart: unless-stopped




  caddy:
    container_name: caddy
    hostname: caddy
    image: caddy:latest
    networks:
      ice:
        ipv4_address: 10.1.1.7
    ports:
      - 80:80
      - 443:443
    environment:
      TZ: 'Europe/Vienna'
    volumes:
      - '${HOST_ROOT}/caddy/index.html:/usr/share/caddy/index.html'
      - '${HOST_ROOT}/caddy/data:/data'
      - '${HOST_ROOT}/caddy/Caddyfile:/etc/caddy/Caddyfile'
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed      
    restart: unless-stopped    


  pihole-exporter:
    container_name: pihole-exporter
    image: ekofr/pihole-exporter:latest
    networks:
      ice:
        ipv4_address: 10.1.1.8
    ports:
      - "9617:9617"
    environment:
      PORT: 9617
      PIHOLE_HOSTNAME: pihole
      PIHOLE_PASSWORD: ${PIHOLE_PASSWORD}

  diun:
    container_name: diun
    image: crazymax/diun:latest
    command: serve
    volumes:
      - "${HOST_ROOT}/diun/data:/data"
      - "${HOST_ROOT}/diun/diun.yml:/config/diun.yml"
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      TZ: 'Europe/Vienna'
      LOG_LEVEL: 'info'
      CONFIG: "/config/diun.yml"
      DIUN_NOTIF_DISCORD_WEBHOOKURL: "${DISCORD_WEBHOOKURL}"
      DIUN_NOTIF_DISCORD_RENDERFIELDS: true
      DIUN_NOTIF_DISCORD_TIMEOUT: "10s"
      DIUN_NOTIF_DISCORD_TEMPLATEBODY: "Docker tag {{ .Entry.Image }} which you subscribed to through {{ .Entry.Provider }} provider has been released."
    labels:
      - "diun.enable=true"
    restart: always

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - "${HOST_ROOT}/loki/local-config.yaml:/etc/loki/local-config.yaml"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      ice:
        ipv4_address: 10.1.1.9

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/log:/var/log
      - "${HOST_ROOT}/promtail/config.yml:/etc/promtail/config.yml"
    command: -config.file=/etc/promtail/config.yml
    networks:
      ice:
        ipv4_address: 10.1.1.10
